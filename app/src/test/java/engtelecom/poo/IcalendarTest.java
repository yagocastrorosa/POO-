/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package engtelecom.poo;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import java.util.ArrayList;


class IcalendarTest {

    @Test
    public void criarEvento() {

        //Classe a ser testada;
        Icalendar c = new Icalendar("teste", "teste");

        String primeiraData = "3,1,2022,1,1,1";

        ArrayList<String> datasExcluidas = new ArrayList<>();
        datasExcluidas.add(primeiraData);

        /**Primeria situação correta:
         * Nome do aplicativo e da empresa apenas com letras;
         * As datas que possuem apenas 1 numeral não precisam do zero na frente. Ex: dia 1 = dia 01;
         * Foi selecionada uma data dentro dos parâmetros corretos para ser excluída;
         **/

        assertEquals(true, c.criarEvento("primeiro teste", "IFSC", 1, 1, 2022, 10, 1, 2022, 13, 5,
        0, 15, 5, 0, 1, 1, 4, 1, 2022, 14, 5, 0,
        2, datasExcluidas));

        //Deixando a lista vazia;
        datasExcluidas.remove(0);

        /**Segunda situação correta:
         * Nome do aplicativo e da empresa apenas com números;
         * O iCalendar aceita uma data inicial posterior a data final, por mais que isso inutilize o evento;
         * Pode ser criado um evento mesmo sem um valor para EXDATE (datasExcluidas);
         **/
        assertEquals(true, c.criarEvento("2", "10", 01, 10, 2022, 01, 01, 2022, 15, 05,
        00, 10, 05, 00, 3, 3, 4, 1, 2022, 14, 05, 00,
        2, datasExcluidas));

        /**Primeria situação incorreta:
         * Não pode ser definido um valor incoerente para a data. Ex: dia = 100;
         * Não pode ser definido um valor incoerente para o horário. Ex: hora = 130;
         * Foi selecionado uma opção que não existe para o dia de repetição do evento;
         **/
        assertEquals(false, c.criarEvento("primeiro teste", "IFSC", 100, 1, 2022, 10, 1, 2022, 130, 5,
        0, 15, 5, 0, 1, 1, 4, 1, 2022, 14, 10, 0,
        2, datasExcluidas));

        String segundaData = "3,15,2022,13,80,0";
        datasExcluidas.add(segundaData);

        /**Segunda situação incorreta:
         * Valores das datas para serem excluídas não podem ser incoerentes;
         **/
        assertEquals(false, c.criarEvento("segundo teste", "IFSC", 10, 1, 2022, 10, 1, 2022, 13, 5,
        0, 15, 5, 0, 1, 1, 4, 1, 2022, 14, 10, 0,
        2, datasExcluidas));

    }


    
}
